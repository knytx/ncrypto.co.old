{"componentChunkName":"component---src-templates-page-js","path":"/style-guide/","result":{"data":{"ghostPage":{"title":"NCRYPTO Style Guide","slug":"style-guide","featured":false,"feature_image":null,"excerpt":"Here‚Äôs a style guide for posts on NCRYPTO News. The first paragraph of each post\nis a lead-in paragraph that‚Äôs styled automatically with the left yellow line.\nPosts are written in markdown.\n\nüòé You can get in touch with us here if you're interesting in collaborating\ncontent.The articles are short and sweet. Longer explanations are broken-down\ninto easier to digest bullets points whenever possible.\n\nNaming Convention\nFile names should start with the date (yyyy-mm-dd), like this:\n\nn3n/2018-06-19-s","custom_excerpt":null,"visibility":"public","created_at_pretty":"14 April, 2020","published_at_pretty":"14 April, 2020","updated_at_pretty":"14 April, 2020","created_at":"2020-04-15T03:02:49.000+05:30","published_at":"2020-04-15T03:03:42.000+05:30","updated_at":"2020-04-15T03:30:24.000+05:30","meta_title":null,"meta_description":null,"og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"NCRYPTO Labs","slug":"n3n","bio":"Our news is trusted and free for everyone. We do not charge you for it, not even your data. ","profile_image":"https://news.n3n.org/content/images/2020/08/NCRYPTO-Dark.png","twitter":"@ncryptolabs","facebook":"ncryptolabs","website":"https://ncrypto.co"}],"primary_author":{"name":"NCRYPTO Labs","slug":"n3n","bio":"Our news is trusted and free for everyone. We do not charge you for it, not even your data. ","profile_image":"https://news.n3n.org/content/images/2020/08/NCRYPTO-Dark.png","twitter":"@ncryptolabs","facebook":"ncryptolabs","website":"https://ncrypto.co"},"primary_tag":null,"tags":[],"plaintext":"Here‚Äôs a style guide for posts on NCRYPTO News. The first paragraph of each post\nis a lead-in paragraph that‚Äôs styled automatically with the left yellow line.\nPosts are written in markdown.\n\nüòé You can get in touch with us here if you're interesting in collaborating\ncontent.The articles are short and sweet. Longer explanations are broken-down\ninto easier to digest bullets points whenever possible.\n\nNaming Convention\nFile names should start with the date (yyyy-mm-dd), like this:\n\nn3n/2018-06-19-security-matters.md\n\n\nTitles & Meta\nKeep article titles short, but do include the emoji related to the topic after\nthe title. For example: Uncovering a Node.js Deserialization Bug üêõ.\n\nArticles should also come with a meta description that‚Äôs between 80 and 150\ncharacters. The meta description should give a brief overview of what the\narticle is about.\n\nHeadings\nUse h2 and h3 headings. Capitalize h2 titles, but don‚Äôt capitalize h3 titles:\n\n## A Great Title\n\nSome text...\n\n### And a great subtitle\n\nSome more text...\n\n\nColors\nHere‚Äôs a breakdown of some the site‚Äôs colors, which can be useful for SVG\ngraphics. Click a value to copy it to the clipboard:\n\nStyling Text\nUse em to highlight text, strong to highlight again, and code for variable and\nfunction names. For example, in markdown:\n\n*let* is the new *var*. **let** is block-scoped.\n\nAn example where we define a `getBacon` function..\n\n\nSecurity Vocabulary\nIf you want to write things, you need to learn the ultima lingua i.e. The\nlanguage of security. Following are the words which can be used to describe\nthings in your way.\n\nBullet Points\nBreakdown complex ideas or list of thoughts into bullets points. For example:\n\n* *Point 1*: Text for point 1.\n* *Point 2*: Text for point 2.\n* *Point 3*: Text for point 3.\n\n\nBecomes this:\n\n * Point 1: Text for point 1.\n * Point 2: Text for point 2.\n * Point 3: Text for point 3.\n\nCode Snippets\nHere are few rules for code snippets:\n\n * Use 2 spaces for code indentation.\n * Don‚Äôt forget your semi-colons in JavaScript. You can omit semi-colons in\n   TypeScript if you prefer.\n * Use single quotes in JavaScript.\n * Use newer ES6/ES7 syntax whenever appropriate. For example, use let and const \n   instead of var.\n\nMarkup your code snippets like this:\n\n<pre><code class=\"javascript\">let ncrypto = true;\n\nif (ncrypto) {\n  console.log('He protec but he also attac!');\n}\n\n// ...</code></pre>\n\n\nUse ... to turn off syntax highlighting.For markup that includes language\nmarkup, you can use the ''' syntax and the html entities will be converted\nautomatically:\n\nBreakdown long lines of code or markup:\n\n<!--  Avoid this -->\n<button mat-icon-button [mat-menu-trigger-for]=\"menu\"><mat-icon>more_vert</mat-icon></button>\n\n<!-- Do this instead -->\n<button mat-icon-button [mat-menu-trigger-for]=\"menu\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n\n<!-- Or even this -->\n<button mat-icon-button\n        [mat-menu-trigger-for]=\"menu\">\n  <mat-icon>more_vert</mat-icon>\n</button>\n\n\nCommand line\nFor terminal commands, let's prepend each command with $:\n\n$ nmap -aA https://ncrypto.co\n\n\n$ nmap -aA https://ncrypto.co\n\nCode Annotations\nYou can highlight specific sections of code by wrapping it in a span with the\ncode-annotation class:\n\nSeparators\nUse horizontal lines for separations:\n\n---\n\n\nIt will look like this\n\n\n--------------------------------------------------------------------------------\n\nInfo Boxes\nYou can add info boxes like this:\n\n<aside>\nI am an info box for a special note about the subject on hand.\n</aside>\n\n\nNote that markdown doesn‚Äôt get evaluated inside these info boxes. So instead of\nsomething like something, you‚Äôll want to use markup like something.\nHere's now an info box looks like:\n\nI am an info box for a special note about the subject on hand.\n--------------------------------------------------------------------------------\n\nYou can also use warning boxes:\n\n<aside data-color=\"alert\">You're entering the danger zone!</aside>\n\n\nYou're entering the danger zone!‚Ä¶and success boxes:\n\n<aside data-color=\"success\">Your app is now ready for production!</aside>\n\n\nYour app is now ready for production!Links\nInternal links should be relative:\n\n<!--  Avoid this -->\n[Fr unit](https://ncrypto.co/life-is-just-a-game/)\n\n<!--  Do this instead -->\n[Fr unit](/life-is-just-a-game/)\n\n\nFile Descriptions\nSome code snippets are easier to understand when given a file name, and this can\nbe included by adding the following markup right before a code snippet:\n\n<p data-filename>Module: <span>keylogger.py</span></p>\n\n\nOr with just the file name like this:\n\n<p data-filename><span>keylogger.py</span></p>\n\n\nHere‚Äôs how it looks like:\n\nkeylogger.py\n\ndef getKeystroke(){\n    return \"Here are some keystrokes for you ‚å®Ô∏è\"\n}\n\n\nImages & Screenshots\nUse image tag like this:\n\n<img src=\"/images/ncrypto/secret.png\" loading=\"lazy\" width=\"600\" class=\"slight-shadow\" alt=\"A little surprise for you!\">\n\n\nTo make for an easier workflow, only one image format is provided, so the image\nshould be twice the desired size so that it looks sharp on retina displays. An\nimage that displays at 600px wide should therefore be saved at 1200px wide.\nJpegs can be saved with a quality of around 60%-70% to make the images as small\nas possible.\n\nSVGs are welcome, especially for graphs and charts. üëç\n\n\n\nShort Notice\nInclude a short notice to interact with readers on an impromptu basis. Like\nthis:\n\n<summary>\n<h4>Hi There</h4>\n<p>Just a quick note on how to introduce a note like this.</p>\n<footer>üòÑ Have a nice day!</footer>\n</summary>\n\n\nand it renders like this:\n\nHi There\nJust a quick note on how to introduce a note like this.\n\nüòÑ Have a nice day!Footnote\nSometimes a footnote is necessary to mention those things that contributed to an\namazing article. Here's how to add it:\n\nHere's a sentence with a footnote. [^1]\nHere's another paper that helped this post üëèüèª. [^2]\n\n[^1]: This is the footnote.\n[^2]: Awesome article\n\n\naaaaand:\n\nHere's a sentence with a footnote. [1]\nHere's another paper that helped this post üëèüèª. [2]\n\nTables and Data\nSometimes a table is necessary to represent tabular data into a news. You can\ngenerate an awesome looking table easily:\n\n| Syntax   | Description                                         |\n|----------|-----------------------------------------------------|\n| #include | This preprocessor includes a C library/header file. |\n| main()   | The main loop where the code runs.                  |\n\n\nSample goes like this:\n\nSyntaxDescription#includeThis preprocessor includes a C library/header file.\nmain()The main loop where the code runs.Quoting legends\nSometimes we want to quote our favorite author or person, its dead simple:\n\n> The best way to predict the future is to invent it.\n>                                       -- Alan Kay\n\n\n> The best way to predict the future is to invent it.\n-- Alan Kay\n\n\nOne last thing...\nIf you have one last funny or insightful thought for the post, it can be\nincluded with any emoji you‚Äôd like, something like this:\n\n<p data-center>\n    üë®üèª‚ÄçüíªHackety hack a heckle hoot.\n</p>\n\n\nüë®üèª‚ÄçüíªHackety hack a heckle hoot.\n\n\n--------------------------------------------------------------------------------\n\n 1. This is the footnote. ‚Ü©Ô∏é\n    \n    \n 2. Awesome article ‚Ü©Ô∏é","html":"<!--kg-card-begin: markdown--><p>Here‚Äôs a style guide for posts on NCRYPTO News. The first paragraph of each post is a lead-in paragraph that‚Äôs styled automatically with the left yellow line. Posts are written in markdown.</p>\n<aside>üòé You can get in touch with us here if you're interesting in collaborating content.</aside>\n<p>The articles are short and sweet. Longer explanations are broken-down into easier to digest bullets points whenever possible.</p>\n<h2 id=\"namingconvention\">Naming Convention</h2>\n<p>File names should start with the date (yyyy-mm-dd), like this:</p>\n<pre><code>n3n/2018-06-19-security-matters.md\n</code></pre>\n<h2 id=\"titlesmeta\">Titles &amp; Meta</h2>\n<p>Keep article titles short, but do include the emoji related to the topic after the title. For example: <strong>Uncovering a Node.js Deserialization Bug üêõ</strong>.</p>\n<p>Articles should also come with a meta description that‚Äôs <em>between 80 and 150 characters</em>. The meta description should give a brief overview of what the article is about.</p>\n<h2 id=\"headings\">Headings</h2>\n<p>Use h2 and h3 headings. Capitalize h2 titles, but don‚Äôt capitalize h3 titles:</p>\n<pre><code>## A Great Title\n\nSome text...\n\n### And a great subtitle\n\nSome more text...\n</code></pre>\n<h2 id=\"colors\">Colors</h2>\n<p>Here‚Äôs a breakdown of some the site‚Äôs colors, which can be useful for SVG graphics. Click a value to copy it to the clipboard:</p>\n<h2 id=\"stylingtext\">Styling Text</h2>\n<p>Use <em>em</em> to highlight text, <strong>strong</strong> to highlight again, and <code>code</code> for variable and function names. For example, in markdown:</p>\n<pre><code>*let* is the new *var*. **let** is block-scoped.\n\nAn example where we define a `getBacon` function..\n</code></pre>\n<h2 id=\"securityvocabulary\">Security Vocabulary</h2>\n<p>If you want to write things, you need to learn the ultima lingua i.e. The language of security. Following are the words which can be used to describe things in your way.</p>\n<h2 id=\"bulletpoints\">Bullet Points</h2>\n<p>Breakdown complex ideas or list of thoughts into bullets points. For example:</p>\n<pre><code>* *Point 1*: Text for point 1.\n* *Point 2*: Text for point 2.\n* *Point 3*: Text for point 3.\n</code></pre>\n<p>Becomes this:</p>\n<ul>\n<li><em>Point 1</em>: Text for point 1.</li>\n<li><em>Point 2</em>: Text for point 2.</li>\n<li><em>Point 3</em>: Text for point 3.</li>\n</ul>\n<h2 id=\"codesnippets\">Code Snippets</h2>\n<p>Here are few rules for code snippets:</p>\n<ul>\n<li>Use 2 spaces for code indentation.</li>\n<li>Don‚Äôt forget your semi-colons in JavaScript. You can omit semi-colons in TypeScript if you prefer.</li>\n<li>Use single quotes in JavaScript.</li>\n<li>Use newer ES6/ES7 syntax whenever appropriate. For example, use <em>let</em> and <em>const</em> instead of <em>var</em>.</li>\n</ul>\n<p>Markup your code snippets like this:</p>\n<pre><code>&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;let ncrypto = true;\n\nif (ncrypto) {\n  console.log('He protec but he also attac!');\n}\n\n// ...&lt;/code&gt;&lt;/pre&gt;\n</code></pre>\n<aside>Use <code class=\"nohighlight\">...</code> to turn off syntax highlighting.</aside>\n<p>For markup that includes language markup, you can use the <code>'''</code> syntax and the html entities will be converted automatically:</p>\n<p>Breakdown long lines of code or markup:</p>\n<pre><code>&lt;!--  Avoid this --&gt;\n&lt;button mat-icon-button [mat-menu-trigger-for]=&quot;menu&quot;&gt;&lt;mat-icon&gt;more_vert&lt;/mat-icon&gt;&lt;/button&gt;\n\n&lt;!-- Do this instead --&gt;\n&lt;button mat-icon-button [mat-menu-trigger-for]=&quot;menu&quot;&gt;\n  &lt;mat-icon&gt;more_vert&lt;/mat-icon&gt;\n&lt;/button&gt;\n\n&lt;!-- Or even this --&gt;\n&lt;button mat-icon-button\n        [mat-menu-trigger-for]=&quot;menu&quot;&gt;\n  &lt;mat-icon&gt;more_vert&lt;/mat-icon&gt;\n&lt;/button&gt;\n</code></pre>\n<h2 id=\"commandline\">Command line</h2>\n<p>For terminal commands, let's prepend each command with $:</p>\n<pre><code>$ nmap -aA https://ncrypto.co\n</code></pre>\n<p><code>$ nmap -aA https://ncrypto.co</code></p>\n<h2 id=\"codeannotations\">Code Annotations</h2>\n<p>You can highlight specific sections of code by wrapping it in a span with the code-annotation class:</p>\n<h2 id=\"separators\">Separators</h2>\n<p>Use horizontal lines for separations:</p>\n<pre><code>---\n</code></pre>\n<p>It will look like this</p>\n<hr>\n<h2 id=\"infoboxes\">Info Boxes</h2>\n<p>You can add info boxes like this:</p>\n<pre><code>&lt;aside&gt;\nI am an info box for a special note about the subject on hand.\n&lt;/aside&gt;\n</code></pre>\n<p>Note that markdown doesn‚Äôt get evaluated inside these info boxes. So instead of something like <em><em>something</em></em>, you‚Äôll want to use markup like <em>something</em>.<br>\nHere's now an info box looks like:</p>\n<aside>I am an info box for a special note about the subject on hand.</aside>\n<hr>\n<p>You can also use warning boxes:</p>\n<pre><code>&lt;aside data-color=&quot;alert&quot;&gt;You're entering the danger zone!&lt;/aside&gt;\n</code></pre>\n<aside data-color=\"alert\">You're entering the danger zone!</aside>\n<p>‚Ä¶and success boxes:</p>\n<pre><code>&lt;aside data-color=&quot;success&quot;&gt;Your app is now ready for production!&lt;/aside&gt;\n</code></pre>\n<aside data-color=\"success\">Your app is now ready for production!</aside>\n<h2 id=\"links\">Links</h2>\n<p>Internal links should be relative:</p>\n<pre><code>&lt;!--  Avoid this --&gt;\n[Fr unit](https://ncrypto.co/life-is-just-a-game/)\n\n&lt;!--  Do this instead --&gt;\n[Fr unit](/life-is-just-a-game/)\n</code></pre>\n<h2 id=\"filedescriptions\">File Descriptions</h2>\n<p>Some code snippets are easier to understand when given a file name, and this can be included by adding the following markup right before a code snippet:</p>\n<pre><code>&lt;p data-filename&gt;Module: &lt;span&gt;keylogger.py&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n<p>Or with just the file name like this:</p>\n<pre><code>&lt;p data-filename&gt;&lt;span&gt;keylogger.py&lt;/span&gt;&lt;/p&gt;\n</code></pre>\n<p>Here‚Äôs how it looks like:</p>\n<p data-filename><span>keylogger.py</span></p>\n<pre><code>def getKeystroke(){\n    return &quot;Here are some keystrokes for you ‚å®Ô∏è&quot;\n}\n</code></pre>\n<h2 id=\"imagesscreenshots\">Images &amp; Screenshots</h2>\n<p>Use image tag like this:</p>\n<pre><code>&lt;img src=&quot;/images/ncrypto/secret.png&quot; loading=&quot;lazy&quot; width=&quot;600&quot; class=&quot;slight-shadow&quot; alt=&quot;A little surprise for you!&quot;&gt;\n</code></pre>\n<p>To make for an easier workflow, only one image format is provided, so the image should be twice the desired size so that it looks sharp on retina displays. An image that displays at 600px wide should therefore be saved at 1200px wide. Jpegs can be saved with a quality of around 60%-70% to make the images as small as possible.</p>\n<p>SVGs are welcome, especially for graphs and charts. üëç</p>\n<p><img src=\"https://news.n3n.org/2020/04/15/asm.gif\" alt=\"asm\"></p>\n<h2 id=\"shortnotice\">Short Notice</h2>\n<p>Include a short notice to interact with readers on an impromptu basis. Like this:</p>\n<pre><code>&lt;summary&gt;\n&lt;h4&gt;Hi There&lt;/h4&gt;\n&lt;p&gt;Just a quick note on how to introduce a note like this.&lt;/p&gt;\n&lt;footer&gt;üòÑ Have a nice day!&lt;/footer&gt;\n&lt;/summary&gt;\n</code></pre>\n<p>and it renders like this:</p>\n<summary>\n<h4>Hi There</h4>\n<p>Just a quick note on how to introduce a note like this.</p>\n<footer>üòÑ Have a nice day!</footer>\n</summary>\n<h2 id=\"footnote\">Footnote</h2>\n<p>Sometimes a footnote is necessary to mention those things that contributed to an amazing article. Here's how to add it:</p>\n<pre><code>Here's a sentence with a footnote. [^1]\nHere's another paper that helped this post üëèüèª. [^2]\n\n[^1]: This is the footnote.\n[^2]: Awesome article\n</code></pre>\n<p>aaaaand:</p>\n<p>Here's a sentence with a footnote. <sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup><br>\nHere's another paper that helped this post üëèüèª. <sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n<h2 id=\"tablesanddata\">Tables and Data</h2>\n<p>Sometimes a table is necessary to represent tabular data into a news. You can generate an awesome looking table easily:</p>\n<pre><code>| Syntax   | Description                                         |\n|----------|-----------------------------------------------------|\n| #include | This preprocessor includes a C library/header file. |\n| main()   | The main loop where the code runs.                  |\n</code></pre>\n<p>Sample goes like this:</p>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>#include</td>\n<td>This preprocessor includes a C library/header file.</td>\n</tr>\n<tr>\n<td>main()</td>\n<td>The main loop where the code runs.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"quotinglegends\">Quoting legends</h2>\n<p>Sometimes we want to quote our favorite author or person, its dead simple:</p>\n<pre><code>&gt; The best way to predict the future is to invent it.\n&gt;                                       -- Alan Kay\n</code></pre>\n<blockquote>\n<p>The best way to predict the future is to invent it.<br>\n-- Alan Kay</p>\n</blockquote>\n<h2 id=\"onelastthing\">One last thing...</h2>\n<p>If you have one last funny or insightful thought for the post, it can be included with any emoji you‚Äôd like, something like this:</p>\n<pre><code>&lt;p data-center&gt;\n    üë®üèª‚ÄçüíªHackety hack a heckle hoot.\n&lt;/p&gt;\n</code></pre>\n<p data-center>\n    üë®üèª‚ÄçüíªHackety hack a heckle hoot.\n</p><hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>This is the footnote. <a href=\"#fnref1\" class=\"footnote-backref\">‚Ü©Ô∏é</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p>Awesome article <a href=\"#fnref2\" class=\"footnote-backref\">‚Ü©Ô∏é</a></p>\n</li>\n</ol>\n</section>\n<!--kg-card-end: markdown-->","url":"https://news.n3n.org/style-guide/","canonical_url":null,"uuid":"26de1dfa-9ca6-40b1-a5d1-61396be12938","page":true,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5e962c01020f6b00827eb509","reading_time":5}},"pageContext":{"slug":"style-guide"}}}